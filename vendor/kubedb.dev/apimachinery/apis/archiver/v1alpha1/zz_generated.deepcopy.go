//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha2 "kubedb.dev/apimachinery/apis/kubedb/v1alpha2"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
	apiv1 "kmodules.xyz/offshoot-api/api/v1"
	corev1alpha1 "kubestash.dev/apimachinery/apis/core/v1alpha1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiverDatabaseRef) DeepCopyInto(out *ArchiverDatabaseRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiverDatabaseRef.
func (in *ArchiverDatabaseRef) DeepCopy() *ArchiverDatabaseRef {
	if in == nil {
		return nil
	}
	out := new(ArchiverDatabaseRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorage) DeepCopyInto(out *BackupStorage) {
	*out = *in
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(v1.ObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorage.
func (in *BackupStorage) DeepCopy() *BackupStorage {
	if in == nil {
		return nil
	}
	out := new(BackupStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullBackupOptions) DeepCopyInto(out *FullBackupOptions) {
	*out = *in
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(Task)
		(*in).DeepCopyInto(*out)
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(SchedulerOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRuntimeSettings != nil {
		in, out := &in.ContainerRuntimeSettings, &out.ContainerRuntimeSettings
		*out = new(apiv1.ContainerRuntimeSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.JobTemplate != nil {
		in, out := &in.JobTemplate, &out.JobTemplate
		*out = new(apiv1.PodTemplateSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryConfig != nil {
		in, out := &in.RetryConfig, &out.RetryConfig
		*out = new(corev1alpha1.RetryConfig)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullBackupOptions.
func (in *FullBackupOptions) DeepCopy() *FullBackupOptions {
	if in == nil {
		return nil
	}
	out := new(FullBackupOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericSecretReference) DeepCopyInto(out *GenericSecretReference) {
	*out = *in
	if in.EnvToSecretKey != nil {
		in, out := &in.EnvToSecretKey, &out.EnvToSecretKey
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericSecretReference.
func (in *GenericSecretReference) DeepCopy() *GenericSecretReference {
	if in == nil {
		return nil
	}
	out := new(GenericSecretReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestBackupOptions) DeepCopyInto(out *ManifestBackupOptions) {
	*out = *in
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(SchedulerOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRuntimeSettings != nil {
		in, out := &in.ContainerRuntimeSettings, &out.ContainerRuntimeSettings
		*out = new(apiv1.ContainerRuntimeSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.JobTemplate != nil {
		in, out := &in.JobTemplate, &out.JobTemplate
		*out = new(apiv1.PodTemplateSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryConfig != nil {
		in, out := &in.RetryConfig, &out.RetryConfig
		*out = new(corev1alpha1.RetryConfig)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestBackupOptions.
func (in *ManifestBackupOptions) DeepCopy() *ManifestBackupOptions {
	if in == nil {
		return nil
	}
	out := new(ManifestBackupOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MariaDBArchiver) DeepCopyInto(out *MariaDBArchiver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MariaDBArchiver.
func (in *MariaDBArchiver) DeepCopy() *MariaDBArchiver {
	if in == nil {
		return nil
	}
	out := new(MariaDBArchiver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MariaDBArchiver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MariaDBArchiverList) DeepCopyInto(out *MariaDBArchiverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MariaDBArchiver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MariaDBArchiverList.
func (in *MariaDBArchiverList) DeepCopy() *MariaDBArchiverList {
	if in == nil {
		return nil
	}
	out := new(MariaDBArchiverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MariaDBArchiverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MariaDBArchiverSpec) DeepCopyInto(out *MariaDBArchiverSpec) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = new(v1alpha2.AllowedConsumers)
		(*in).DeepCopyInto(*out)
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.FullBackup != nil {
		in, out := &in.FullBackup, &out.FullBackup
		*out = new(FullBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.WalBackup != nil {
		in, out := &in.WalBackup, &out.WalBackup
		*out = new(WalBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ManifestBackup != nil {
		in, out := &in.ManifestBackup, &out.ManifestBackup
		*out = new(ManifestBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionSecret != nil {
		in, out := &in.EncryptionSecret, &out.EncryptionSecret
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.BackupStorage != nil {
		in, out := &in.BackupStorage, &out.BackupStorage
		*out = new(BackupStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(DeletionPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MariaDBArchiverSpec.
func (in *MariaDBArchiverSpec) DeepCopy() *MariaDBArchiverSpec {
	if in == nil {
		return nil
	}
	out := new(MariaDBArchiverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MariaDBArchiverStatus) DeepCopyInto(out *MariaDBArchiverStatus) {
	*out = *in
	if in.DatabaseRefs != nil {
		in, out := &in.DatabaseRefs, &out.DatabaseRefs
		*out = make([]ArchiverDatabaseRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MariaDBArchiverStatus.
func (in *MariaDBArchiverStatus) DeepCopy() *MariaDBArchiverStatus {
	if in == nil {
		return nil
	}
	out := new(MariaDBArchiverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBArchiver) DeepCopyInto(out *MongoDBArchiver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBArchiver.
func (in *MongoDBArchiver) DeepCopy() *MongoDBArchiver {
	if in == nil {
		return nil
	}
	out := new(MongoDBArchiver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBArchiver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBArchiverList) DeepCopyInto(out *MongoDBArchiverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoDBArchiver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBArchiverList.
func (in *MongoDBArchiverList) DeepCopy() *MongoDBArchiverList {
	if in == nil {
		return nil
	}
	out := new(MongoDBArchiverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBArchiverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBArchiverSpec) DeepCopyInto(out *MongoDBArchiverSpec) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = new(v1alpha2.AllowedConsumers)
		(*in).DeepCopyInto(*out)
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.FullBackup != nil {
		in, out := &in.FullBackup, &out.FullBackup
		*out = new(FullBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.WalBackup != nil {
		in, out := &in.WalBackup, &out.WalBackup
		*out = new(WalBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ManifestBackup != nil {
		in, out := &in.ManifestBackup, &out.ManifestBackup
		*out = new(ManifestBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionSecret != nil {
		in, out := &in.EncryptionSecret, &out.EncryptionSecret
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.BackupStorage != nil {
		in, out := &in.BackupStorage, &out.BackupStorage
		*out = new(BackupStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(DeletionPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBArchiverSpec.
func (in *MongoDBArchiverSpec) DeepCopy() *MongoDBArchiverSpec {
	if in == nil {
		return nil
	}
	out := new(MongoDBArchiverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBArchiverStatus) DeepCopyInto(out *MongoDBArchiverStatus) {
	*out = *in
	if in.DatabaseRefs != nil {
		in, out := &in.DatabaseRefs, &out.DatabaseRefs
		*out = make([]ArchiverDatabaseRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBArchiverStatus.
func (in *MongoDBArchiverStatus) DeepCopy() *MongoDBArchiverStatus {
	if in == nil {
		return nil
	}
	out := new(MongoDBArchiverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLArchiver) DeepCopyInto(out *MySQLArchiver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLArchiver.
func (in *MySQLArchiver) DeepCopy() *MySQLArchiver {
	if in == nil {
		return nil
	}
	out := new(MySQLArchiver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLArchiver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLArchiverList) DeepCopyInto(out *MySQLArchiverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySQLArchiver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLArchiverList.
func (in *MySQLArchiverList) DeepCopy() *MySQLArchiverList {
	if in == nil {
		return nil
	}
	out := new(MySQLArchiverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLArchiverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLArchiverSpec) DeepCopyInto(out *MySQLArchiverSpec) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = new(v1alpha2.AllowedConsumers)
		(*in).DeepCopyInto(*out)
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.FullBackup != nil {
		in, out := &in.FullBackup, &out.FullBackup
		*out = new(FullBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.WalBackup != nil {
		in, out := &in.WalBackup, &out.WalBackup
		*out = new(WalBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ManifestBackup != nil {
		in, out := &in.ManifestBackup, &out.ManifestBackup
		*out = new(ManifestBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionSecret != nil {
		in, out := &in.EncryptionSecret, &out.EncryptionSecret
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.BackupStorage != nil {
		in, out := &in.BackupStorage, &out.BackupStorage
		*out = new(BackupStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(DeletionPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLArchiverSpec.
func (in *MySQLArchiverSpec) DeepCopy() *MySQLArchiverSpec {
	if in == nil {
		return nil
	}
	out := new(MySQLArchiverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLArchiverStatus) DeepCopyInto(out *MySQLArchiverStatus) {
	*out = *in
	if in.DatabaseRefs != nil {
		in, out := &in.DatabaseRefs, &out.DatabaseRefs
		*out = make([]ArchiverDatabaseRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLArchiverStatus.
func (in *MySQLArchiverStatus) DeepCopy() *MySQLArchiverStatus {
	if in == nil {
		return nil
	}
	out := new(MySQLArchiverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresArchiver) DeepCopyInto(out *PostgresArchiver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresArchiver.
func (in *PostgresArchiver) DeepCopy() *PostgresArchiver {
	if in == nil {
		return nil
	}
	out := new(PostgresArchiver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresArchiver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresArchiverList) DeepCopyInto(out *PostgresArchiverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgresArchiver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresArchiverList.
func (in *PostgresArchiverList) DeepCopy() *PostgresArchiverList {
	if in == nil {
		return nil
	}
	out := new(PostgresArchiverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresArchiverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresArchiverSpec) DeepCopyInto(out *PostgresArchiverSpec) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = new(v1alpha2.AllowedConsumers)
		(*in).DeepCopyInto(*out)
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.FullBackup != nil {
		in, out := &in.FullBackup, &out.FullBackup
		*out = new(FullBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.WalBackup != nil {
		in, out := &in.WalBackup, &out.WalBackup
		*out = new(WalBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ManifestBackup != nil {
		in, out := &in.ManifestBackup, &out.ManifestBackup
		*out = new(ManifestBackupOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionSecret != nil {
		in, out := &in.EncryptionSecret, &out.EncryptionSecret
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.BackupStorage != nil {
		in, out := &in.BackupStorage, &out.BackupStorage
		*out = new(BackupStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.DeletionPolicy != nil {
		in, out := &in.DeletionPolicy, &out.DeletionPolicy
		*out = new(DeletionPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresArchiverSpec.
func (in *PostgresArchiverSpec) DeepCopy() *PostgresArchiverSpec {
	if in == nil {
		return nil
	}
	out := new(PostgresArchiverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresArchiverStatus) DeepCopyInto(out *PostgresArchiverStatus) {
	*out = *in
	if in.DatabaseRefs != nil {
		in, out := &in.DatabaseRefs, &out.DatabaseRefs
		*out = make([]ArchiverDatabaseRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresArchiverStatus.
func (in *PostgresArchiverStatus) DeepCopy() *PostgresArchiverStatus {
	if in == nil {
		return nil
	}
	out := new(PostgresArchiverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerOptions) DeepCopyInto(out *SchedulerOptions) {
	*out = *in
	in.JobTemplate.DeepCopyInto(&out.JobTemplate)
	if in.SuccessfulJobsHistoryLimit != nil {
		in, out := &in.SuccessfulJobsHistoryLimit, &out.SuccessfulJobsHistoryLimit
		*out = new(int32)
		**out = **in
	}
	if in.FailedJobsHistoryLimit != nil {
		in, out := &in.FailedJobsHistoryLimit, &out.FailedJobsHistoryLimit
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerOptions.
func (in *SchedulerOptions) DeepCopy() *SchedulerOptions {
	if in == nil {
		return nil
	}
	out := new(SchedulerOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WalBackupOptions) DeepCopyInto(out *WalBackupOptions) {
	*out = *in
	if in.RuntimeSettings != nil {
		in, out := &in.RuntimeSettings, &out.RuntimeSettings
		*out = new(apiv1.RuntimeSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigSecret != nil {
		in, out := &in.ConfigSecret, &out.ConfigSecret
		*out = new(GenericSecretReference)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WalBackupOptions.
func (in *WalBackupOptions) DeepCopy() *WalBackupOptions {
	if in == nil {
		return nil
	}
	out := new(WalBackupOptions)
	in.DeepCopyInto(out)
	return out
}
