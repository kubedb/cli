// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1alpha1

import (
	"fmt"
	"strings"
)

const (
	// ElasticsearchOpsRequestTypeUpgrade is a ElasticsearchOpsRequestType of type Upgrade.
	ElasticsearchOpsRequestTypeUpgrade ElasticsearchOpsRequestType = "Upgrade"
	// ElasticsearchOpsRequestTypeUpdateVersion is a ElasticsearchOpsRequestType of type UpdateVersion.
	ElasticsearchOpsRequestTypeUpdateVersion ElasticsearchOpsRequestType = "UpdateVersion"
	// ElasticsearchOpsRequestTypeHorizontalScaling is a ElasticsearchOpsRequestType of type HorizontalScaling.
	ElasticsearchOpsRequestTypeHorizontalScaling ElasticsearchOpsRequestType = "HorizontalScaling"
	// ElasticsearchOpsRequestTypeVerticalScaling is a ElasticsearchOpsRequestType of type VerticalScaling.
	ElasticsearchOpsRequestTypeVerticalScaling ElasticsearchOpsRequestType = "VerticalScaling"
	// ElasticsearchOpsRequestTypeVolumeExpansion is a ElasticsearchOpsRequestType of type VolumeExpansion.
	ElasticsearchOpsRequestTypeVolumeExpansion ElasticsearchOpsRequestType = "VolumeExpansion"
	// ElasticsearchOpsRequestTypeRestart is a ElasticsearchOpsRequestType of type Restart.
	ElasticsearchOpsRequestTypeRestart ElasticsearchOpsRequestType = "Restart"
	// ElasticsearchOpsRequestTypeReconfigure is a ElasticsearchOpsRequestType of type Reconfigure.
	ElasticsearchOpsRequestTypeReconfigure ElasticsearchOpsRequestType = "Reconfigure"
	// ElasticsearchOpsRequestTypeReconfigureTLS is a ElasticsearchOpsRequestType of type ReconfigureTLS.
	ElasticsearchOpsRequestTypeReconfigureTLS ElasticsearchOpsRequestType = "ReconfigureTLS"
)

var ErrInvalidElasticsearchOpsRequestType = fmt.Errorf("not a valid ElasticsearchOpsRequestType, try [%s]", strings.Join(_ElasticsearchOpsRequestTypeNames, ", "))

var _ElasticsearchOpsRequestTypeNames = []string{
	string(ElasticsearchOpsRequestTypeUpgrade),
	string(ElasticsearchOpsRequestTypeUpdateVersion),
	string(ElasticsearchOpsRequestTypeHorizontalScaling),
	string(ElasticsearchOpsRequestTypeVerticalScaling),
	string(ElasticsearchOpsRequestTypeVolumeExpansion),
	string(ElasticsearchOpsRequestTypeRestart),
	string(ElasticsearchOpsRequestTypeReconfigure),
	string(ElasticsearchOpsRequestTypeReconfigureTLS),
}

// ElasticsearchOpsRequestTypeNames returns a list of possible string values of ElasticsearchOpsRequestType.
func ElasticsearchOpsRequestTypeNames() []string {
	tmp := make([]string, len(_ElasticsearchOpsRequestTypeNames))
	copy(tmp, _ElasticsearchOpsRequestTypeNames)
	return tmp
}

// ElasticsearchOpsRequestTypeValues returns a list of the values for ElasticsearchOpsRequestType
func ElasticsearchOpsRequestTypeValues() []ElasticsearchOpsRequestType {
	return []ElasticsearchOpsRequestType{
		ElasticsearchOpsRequestTypeUpgrade,
		ElasticsearchOpsRequestTypeUpdateVersion,
		ElasticsearchOpsRequestTypeHorizontalScaling,
		ElasticsearchOpsRequestTypeVerticalScaling,
		ElasticsearchOpsRequestTypeVolumeExpansion,
		ElasticsearchOpsRequestTypeRestart,
		ElasticsearchOpsRequestTypeReconfigure,
		ElasticsearchOpsRequestTypeReconfigureTLS,
	}
}

// String implements the Stringer interface.
func (x ElasticsearchOpsRequestType) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x ElasticsearchOpsRequestType) IsValid() bool {
	_, err := ParseElasticsearchOpsRequestType(string(x))
	return err == nil
}

var _ElasticsearchOpsRequestTypeValue = map[string]ElasticsearchOpsRequestType{
	"Upgrade":           ElasticsearchOpsRequestTypeUpgrade,
	"UpdateVersion":     ElasticsearchOpsRequestTypeUpdateVersion,
	"HorizontalScaling": ElasticsearchOpsRequestTypeHorizontalScaling,
	"VerticalScaling":   ElasticsearchOpsRequestTypeVerticalScaling,
	"VolumeExpansion":   ElasticsearchOpsRequestTypeVolumeExpansion,
	"Restart":           ElasticsearchOpsRequestTypeRestart,
	"Reconfigure":       ElasticsearchOpsRequestTypeReconfigure,
	"ReconfigureTLS":    ElasticsearchOpsRequestTypeReconfigureTLS,
}

// ParseElasticsearchOpsRequestType attempts to convert a string to a ElasticsearchOpsRequestType.
func ParseElasticsearchOpsRequestType(name string) (ElasticsearchOpsRequestType, error) {
	if x, ok := _ElasticsearchOpsRequestTypeValue[name]; ok {
		return x, nil
	}
	return ElasticsearchOpsRequestType(""), fmt.Errorf("%s is %w", name, ErrInvalidElasticsearchOpsRequestType)
}

// MustParseElasticsearchOpsRequestType converts a string to a ElasticsearchOpsRequestType, and panics if is not valid.
func MustParseElasticsearchOpsRequestType(name string) ElasticsearchOpsRequestType {
	val, err := ParseElasticsearchOpsRequestType(name)
	if err != nil {
		panic(err)
	}
	return val
}
