// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1alpha1

import (
	"fmt"
	"strings"
)

const (
	// FerretDBOpsRequestTypeUpdateVersion is a FerretDBOpsRequestType of type UpdateVersion.
	FerretDBOpsRequestTypeUpdateVersion FerretDBOpsRequestType = "UpdateVersion"
	// FerretDBOpsRequestTypeRestart is a FerretDBOpsRequestType of type Restart.
	FerretDBOpsRequestTypeRestart FerretDBOpsRequestType = "Restart"
	// FerretDBOpsRequestTypeVerticalScaling is a FerretDBOpsRequestType of type VerticalScaling.
	FerretDBOpsRequestTypeVerticalScaling FerretDBOpsRequestType = "VerticalScaling"
	// FerretDBOpsRequestTypeHorizontalScaling is a FerretDBOpsRequestType of type HorizontalScaling.
	FerretDBOpsRequestTypeHorizontalScaling FerretDBOpsRequestType = "HorizontalScaling"
	// FerretDBOpsRequestTypeReconfigureTLS is a FerretDBOpsRequestType of type ReconfigureTLS.
	FerretDBOpsRequestTypeReconfigureTLS FerretDBOpsRequestType = "ReconfigureTLS"
)

var ErrInvalidFerretDBOpsRequestType = fmt.Errorf("not a valid FerretDBOpsRequestType, try [%s]", strings.Join(_FerretDBOpsRequestTypeNames, ", "))

var _FerretDBOpsRequestTypeNames = []string{
	string(FerretDBOpsRequestTypeUpdateVersion),
	string(FerretDBOpsRequestTypeRestart),
	string(FerretDBOpsRequestTypeVerticalScaling),
	string(FerretDBOpsRequestTypeHorizontalScaling),
	string(FerretDBOpsRequestTypeReconfigureTLS),
}

// FerretDBOpsRequestTypeNames returns a list of possible string values of FerretDBOpsRequestType.
func FerretDBOpsRequestTypeNames() []string {
	tmp := make([]string, len(_FerretDBOpsRequestTypeNames))
	copy(tmp, _FerretDBOpsRequestTypeNames)
	return tmp
}

// FerretDBOpsRequestTypeValues returns a list of the values for FerretDBOpsRequestType
func FerretDBOpsRequestTypeValues() []FerretDBOpsRequestType {
	return []FerretDBOpsRequestType{
		FerretDBOpsRequestTypeUpdateVersion,
		FerretDBOpsRequestTypeRestart,
		FerretDBOpsRequestTypeVerticalScaling,
		FerretDBOpsRequestTypeHorizontalScaling,
		FerretDBOpsRequestTypeReconfigureTLS,
	}
}

// String implements the Stringer interface.
func (x FerretDBOpsRequestType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x FerretDBOpsRequestType) IsValid() bool {
	_, err := ParseFerretDBOpsRequestType(string(x))
	return err == nil
}

var _FerretDBOpsRequestTypeValue = map[string]FerretDBOpsRequestType{
	"UpdateVersion":     FerretDBOpsRequestTypeUpdateVersion,
	"Restart":           FerretDBOpsRequestTypeRestart,
	"VerticalScaling":   FerretDBOpsRequestTypeVerticalScaling,
	"HorizontalScaling": FerretDBOpsRequestTypeHorizontalScaling,
	"ReconfigureTLS":    FerretDBOpsRequestTypeReconfigureTLS,
}

// ParseFerretDBOpsRequestType attempts to convert a string to a FerretDBOpsRequestType.
func ParseFerretDBOpsRequestType(name string) (FerretDBOpsRequestType, error) {
	if x, ok := _FerretDBOpsRequestTypeValue[name]; ok {
		return x, nil
	}
	return FerretDBOpsRequestType(""), fmt.Errorf("%s is %w", name, ErrInvalidFerretDBOpsRequestType)
}

// MustParseFerretDBOpsRequestType converts a string to a FerretDBOpsRequestType, and panics if is not valid.
func MustParseFerretDBOpsRequestType(name string) FerretDBOpsRequestType {
	val, err := ParseFerretDBOpsRequestType(name)
	if err != nil {
		panic(err)
	}
	return val
}
