// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1alpha1

import (
	"fmt"
	"strings"
)

const (
	// MSSQLServerOpsRequestTypeRestart is a MSSQLServerOpsRequestType of type Restart.
	MSSQLServerOpsRequestTypeRestart MSSQLServerOpsRequestType = "Restart"
)

var ErrInvalidMSSQLServerOpsRequestType = fmt.Errorf("not a valid MSSQLServerOpsRequestType, try [%s]", strings.Join(_MSSQLServerOpsRequestTypeNames, ", "))

var _MSSQLServerOpsRequestTypeNames = []string{
	string(MSSQLServerOpsRequestTypeRestart),
}

// MSSQLServerOpsRequestTypeNames returns a list of possible string values of MSSQLServerOpsRequestType.
func MSSQLServerOpsRequestTypeNames() []string {
	tmp := make([]string, len(_MSSQLServerOpsRequestTypeNames))
	copy(tmp, _MSSQLServerOpsRequestTypeNames)
	return tmp
}

// MSSQLServerOpsRequestTypeValues returns a list of the values for MSSQLServerOpsRequestType
func MSSQLServerOpsRequestTypeValues() []MSSQLServerOpsRequestType {
	return []MSSQLServerOpsRequestType{
		MSSQLServerOpsRequestTypeRestart,
	}
}

// String implements the Stringer interface.
func (x MSSQLServerOpsRequestType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x MSSQLServerOpsRequestType) IsValid() bool {
	_, err := ParseMSSQLServerOpsRequestType(string(x))
	return err == nil
}

var _MSSQLServerOpsRequestTypeValue = map[string]MSSQLServerOpsRequestType{
	"Restart": MSSQLServerOpsRequestTypeRestart,
}

// ParseMSSQLServerOpsRequestType attempts to convert a string to a MSSQLServerOpsRequestType.
func ParseMSSQLServerOpsRequestType(name string) (MSSQLServerOpsRequestType, error) {
	if x, ok := _MSSQLServerOpsRequestTypeValue[name]; ok {
		return x, nil
	}
	return MSSQLServerOpsRequestType(""), fmt.Errorf("%s is %w", name, ErrInvalidMSSQLServerOpsRequestType)
}

// MustParseMSSQLServerOpsRequestType converts a string to a MSSQLServerOpsRequestType, and panics if is not valid.
func MustParseMSSQLServerOpsRequestType(name string) MSSQLServerOpsRequestType {
	val, err := ParseMSSQLServerOpsRequestType(name)
	if err != nil {
		panic(err)
	}
	return val
}
