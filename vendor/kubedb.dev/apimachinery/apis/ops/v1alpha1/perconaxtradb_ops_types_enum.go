// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1alpha1

import (
	"fmt"
	"strings"
)

const (
	// PerconaXtraDBOpsRequestTypeUpgrade is a PerconaXtraDBOpsRequestType of type Upgrade.
	PerconaXtraDBOpsRequestTypeUpgrade PerconaXtraDBOpsRequestType = "Upgrade"
	// PerconaXtraDBOpsRequestTypeUpdateVersion is a PerconaXtraDBOpsRequestType of type UpdateVersion.
	PerconaXtraDBOpsRequestTypeUpdateVersion PerconaXtraDBOpsRequestType = "UpdateVersion"
	// PerconaXtraDBOpsRequestTypeHorizontalScaling is a PerconaXtraDBOpsRequestType of type HorizontalScaling.
	PerconaXtraDBOpsRequestTypeHorizontalScaling PerconaXtraDBOpsRequestType = "HorizontalScaling"
	// PerconaXtraDBOpsRequestTypeVerticalScaling is a PerconaXtraDBOpsRequestType of type VerticalScaling.
	PerconaXtraDBOpsRequestTypeVerticalScaling PerconaXtraDBOpsRequestType = "VerticalScaling"
	// PerconaXtraDBOpsRequestTypeVolumeExpansion is a PerconaXtraDBOpsRequestType of type VolumeExpansion.
	PerconaXtraDBOpsRequestTypeVolumeExpansion PerconaXtraDBOpsRequestType = "VolumeExpansion"
	// PerconaXtraDBOpsRequestTypeRestart is a PerconaXtraDBOpsRequestType of type Restart.
	PerconaXtraDBOpsRequestTypeRestart PerconaXtraDBOpsRequestType = "Restart"
	// PerconaXtraDBOpsRequestTypeReconfigure is a PerconaXtraDBOpsRequestType of type Reconfigure.
	PerconaXtraDBOpsRequestTypeReconfigure PerconaXtraDBOpsRequestType = "Reconfigure"
	// PerconaXtraDBOpsRequestTypeReconfigureTLS is a PerconaXtraDBOpsRequestType of type ReconfigureTLS.
	PerconaXtraDBOpsRequestTypeReconfigureTLS PerconaXtraDBOpsRequestType = "ReconfigureTLS"
)

var ErrInvalidPerconaXtraDBOpsRequestType = fmt.Errorf("not a valid PerconaXtraDBOpsRequestType, try [%s]", strings.Join(_PerconaXtraDBOpsRequestTypeNames, ", "))

var _PerconaXtraDBOpsRequestTypeNames = []string{
	string(PerconaXtraDBOpsRequestTypeUpgrade),
	string(PerconaXtraDBOpsRequestTypeUpdateVersion),
	string(PerconaXtraDBOpsRequestTypeHorizontalScaling),
	string(PerconaXtraDBOpsRequestTypeVerticalScaling),
	string(PerconaXtraDBOpsRequestTypeVolumeExpansion),
	string(PerconaXtraDBOpsRequestTypeRestart),
	string(PerconaXtraDBOpsRequestTypeReconfigure),
	string(PerconaXtraDBOpsRequestTypeReconfigureTLS),
}

// PerconaXtraDBOpsRequestTypeNames returns a list of possible string values of PerconaXtraDBOpsRequestType.
func PerconaXtraDBOpsRequestTypeNames() []string {
	tmp := make([]string, len(_PerconaXtraDBOpsRequestTypeNames))
	copy(tmp, _PerconaXtraDBOpsRequestTypeNames)
	return tmp
}

// PerconaXtraDBOpsRequestTypeValues returns a list of the values for PerconaXtraDBOpsRequestType
func PerconaXtraDBOpsRequestTypeValues() []PerconaXtraDBOpsRequestType {
	return []PerconaXtraDBOpsRequestType{
		PerconaXtraDBOpsRequestTypeUpgrade,
		PerconaXtraDBOpsRequestTypeUpdateVersion,
		PerconaXtraDBOpsRequestTypeHorizontalScaling,
		PerconaXtraDBOpsRequestTypeVerticalScaling,
		PerconaXtraDBOpsRequestTypeVolumeExpansion,
		PerconaXtraDBOpsRequestTypeRestart,
		PerconaXtraDBOpsRequestTypeReconfigure,
		PerconaXtraDBOpsRequestTypeReconfigureTLS,
	}
}

// String implements the Stringer interface.
func (x PerconaXtraDBOpsRequestType) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x PerconaXtraDBOpsRequestType) IsValid() bool {
	_, err := ParsePerconaXtraDBOpsRequestType(string(x))
	return err == nil
}

var _PerconaXtraDBOpsRequestTypeValue = map[string]PerconaXtraDBOpsRequestType{
	"Upgrade":           PerconaXtraDBOpsRequestTypeUpgrade,
	"UpdateVersion":     PerconaXtraDBOpsRequestTypeUpdateVersion,
	"HorizontalScaling": PerconaXtraDBOpsRequestTypeHorizontalScaling,
	"VerticalScaling":   PerconaXtraDBOpsRequestTypeVerticalScaling,
	"VolumeExpansion":   PerconaXtraDBOpsRequestTypeVolumeExpansion,
	"Restart":           PerconaXtraDBOpsRequestTypeRestart,
	"Reconfigure":       PerconaXtraDBOpsRequestTypeReconfigure,
	"ReconfigureTLS":    PerconaXtraDBOpsRequestTypeReconfigureTLS,
}

// ParsePerconaXtraDBOpsRequestType attempts to convert a string to a PerconaXtraDBOpsRequestType.
func ParsePerconaXtraDBOpsRequestType(name string) (PerconaXtraDBOpsRequestType, error) {
	if x, ok := _PerconaXtraDBOpsRequestTypeValue[name]; ok {
		return x, nil
	}
	return PerconaXtraDBOpsRequestType(""), fmt.Errorf("%s is %w", name, ErrInvalidPerconaXtraDBOpsRequestType)
}

// MustParsePerconaXtraDBOpsRequestType converts a string to a PerconaXtraDBOpsRequestType, and panics if is not valid.
func MustParsePerconaXtraDBOpsRequestType(name string) PerconaXtraDBOpsRequestType {
	val, err := ParsePerconaXtraDBOpsRequestType(name)
	if err != nil {
		panic(err)
	}
	return val
}
