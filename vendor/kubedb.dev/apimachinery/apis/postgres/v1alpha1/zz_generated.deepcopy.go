//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedSubscribers) DeepCopyInto(out *AllowedSubscribers) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = new(SubscriberNamespaces)
		(*in).DeepCopyInto(*out)
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedSubscribers.
func (in *AllowedSubscribers) DeepCopy() *AllowedSubscribers {
	if in == nil {
		return nil
	}
	out := new(AllowedSubscribers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPublisherInfo) DeepCopyInto(out *ExternalPublisherInfo) {
	*out = *in
	out.ServerRef = in.ServerRef
	if in.Publications != nil {
		in, out := &in.Publications, &out.Publications
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPublisherInfo.
func (in *ExternalPublisherInfo) DeepCopy() *ExternalPublisherInfo {
	if in == nil {
		return nil
	}
	out := new(ExternalPublisherInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPublisherInfo) DeepCopyInto(out *ManagedPublisherInfo) {
	*out = *in
	if in.Refs != nil {
		in, out := &in.Refs, &out.Refs
		*out = make([]corev1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPublisherInfo.
func (in *ManagedPublisherInfo) DeepCopy() *ManagedPublisherInfo {
	if in == nil {
		return nil
	}
	out := new(ManagedPublisherInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Publisher) DeepCopyInto(out *Publisher) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Publisher.
func (in *Publisher) DeepCopy() *Publisher {
	if in == nil {
		return nil
	}
	out := new(Publisher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Publisher) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherInfo) DeepCopyInto(out *PublisherInfo) {
	*out = *in
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(ManagedPublisherInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(ExternalPublisherInfo)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherInfo.
func (in *PublisherInfo) DeepCopy() *PublisherInfo {
	if in == nil {
		return nil
	}
	out := new(PublisherInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherList) DeepCopyInto(out *PublisherList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Publisher, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherList.
func (in *PublisherList) DeepCopy() *PublisherList {
	if in == nil {
		return nil
	}
	out := new(PublisherList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublisherList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherParameters) DeepCopyInto(out *PublisherParameters) {
	*out = *in
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]DMLOperation, len(*in))
		copy(*out, *in)
	}
	if in.PublishViaPartitionRoot != nil {
		in, out := &in.PublishViaPartitionRoot, &out.PublishViaPartitionRoot
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherParameters.
func (in *PublisherParameters) DeepCopy() *PublisherParameters {
	if in == nil {
		return nil
	}
	out := new(PublisherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherSpec) DeepCopyInto(out *PublisherSpec) {
	*out = *in
	out.ServerRef = in.ServerRef
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(PublisherParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AllowedSubscribers != nil {
		in, out := &in.AllowedSubscribers, &out.AllowedSubscribers
		*out = new(AllowedSubscribers)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherSpec.
func (in *PublisherSpec) DeepCopy() *PublisherSpec {
	if in == nil {
		return nil
	}
	out := new(PublisherSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublisherStatus) DeepCopyInto(out *PublisherStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subscribers != nil {
		in, out := &in.Subscribers, &out.Subscribers
		*out = make([]apiv1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublisherStatus.
func (in *PublisherStatus) DeepCopy() *PublisherStatus {
	if in == nil {
		return nil
	}
	out := new(PublisherStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscriber) DeepCopyInto(out *Subscriber) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscriber.
func (in *Subscriber) DeepCopy() *Subscriber {
	if in == nil {
		return nil
	}
	out := new(Subscriber)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscriber) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriberList) DeepCopyInto(out *SubscriberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscriber, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriberList.
func (in *SubscriberList) DeepCopy() *SubscriberList {
	if in == nil {
		return nil
	}
	out := new(SubscriberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriberNamespaces) DeepCopyInto(out *SubscriberNamespaces) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(FromNamespaces)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriberNamespaces.
func (in *SubscriberNamespaces) DeepCopy() *SubscriberNamespaces {
	if in == nil {
		return nil
	}
	out := new(SubscriberNamespaces)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriberParameters) DeepCopyInto(out *SubscriberParameters) {
	*out = *in
	if in.CopyData != nil {
		in, out := &in.CopyData, &out.CopyData
		*out = new(bool)
		**out = **in
	}
	if in.CreateSlot != nil {
		in, out := &in.CreateSlot, &out.CreateSlot
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SlotName != nil {
		in, out := &in.SlotName, &out.SlotName
		*out = new(string)
		**out = **in
	}
	if in.SynchronousCommit != nil {
		in, out := &in.SynchronousCommit, &out.SynchronousCommit
		*out = new(string)
		**out = **in
	}
	if in.Connect != nil {
		in, out := &in.Connect, &out.Connect
		*out = new(bool)
		**out = **in
	}
	if in.Streaming != nil {
		in, out := &in.Streaming, &out.Streaming
		*out = new(bool)
		**out = **in
	}
	if in.Binary != nil {
		in, out := &in.Binary, &out.Binary
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriberParameters.
func (in *SubscriberParameters) DeepCopy() *SubscriberParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriberSpec) DeepCopyInto(out *SubscriberSpec) {
	*out = *in
	out.ServerRef = in.ServerRef
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(SubscriberParameters)
		(*in).DeepCopyInto(*out)
	}
	in.Publisher.DeepCopyInto(&out.Publisher)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriberSpec.
func (in *SubscriberSpec) DeepCopy() *SubscriberSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriberStatus) DeepCopyInto(out *SubscriberStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriberStatus.
func (in *SubscriberStatus) DeepCopy() *SubscriberStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriberStatus)
	in.DeepCopyInto(out)
	return out
}
