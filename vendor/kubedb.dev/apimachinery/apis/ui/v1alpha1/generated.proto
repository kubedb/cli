/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package kubedb.dev.apimachinery.apis.ui.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/api/resource/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "kubedb.dev/apimachinery/apis/kubedb/v1alpha2/generated.proto";
import "sigs.k8s.io/controller-runtime/pkg/scheme/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message DBConnectionInfo {
  optional string url = 1;

  optional int32 port = 2;
}

message DBCredentials {
  optional string username = 1;

  optional string password = 2;

  optional string certificate = 3;
}

message ElasticsearchClusterHealth {
  optional int32 activePrimaryShards = 1;

  optional int32 activeShards = 2;

  optional int32 activeShardsPercentAsNumber = 3;

  optional string clusterName = 4;

  optional int32 delayedUnassignedShards = 5;

  optional int32 initializingShards = 6;

  optional int32 numberOfDataNodes = 7;

  optional int32 numberOfInFlightFetch = 8;

  optional int32 numberOfNodes = 9;

  optional int32 numberOfPendingTasks = 10;

  optional int32 relocatingShards = 11;

  optional string status = 12;

  optional int32 unassignedShards = 13;

  optional int32 taskMaxWaitingInQueueMillis = 14;
}

message ElasticsearchIndexSpec {
  optional string indexName = 1;

  optional string primaryStoreSizeInBytes = 2;

  optional string totalStoreSizeInBytes = 3;
}

message ElasticsearchNodesStatSpec {
  // Time the node stats were collected for this response in Unix
  optional int64 timestamp = 1;

  // Human-readable identifier for the node.
  optional string name = 2;

  // Transport address for the node
  optional string transport_addr = 3;

  // Network host for the node
  optional string host = 4;

  // IP address and port for the node
  optional string ip = 5;

  // Roles assigned to the node
  repeated string roles = 6;

  // Indices returns index information.
  optional NodesStatsIndex indices = 7;

  // OS information, e.g. CPU and memory.
  optional NodesStatsNodeOS os = 8;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ElasticsearchNodesStats {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchNodesStatsSpec spec = 2;

  optional ElasticsearchNodesStatsStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ElasticsearchNodesStatsList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ElasticsearchNodesStats items = 2;
}

// ElasticsearchNodesStatsSpec defines the desired state of ElasticsearchNodesStats
message ElasticsearchNodesStatsSpec {
  repeated ElasticsearchNodesStatSpec nodes = 1;
}

// ElasticsearchNodesStatsStatus defines the observed state of ElasticsearchNodesStats
message ElasticsearchNodesStatsStatus {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ElasticsearchOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchOverviewSpec spec = 2;

  optional .kubedb.dev.apimachinery.apis.kubedb.v1alpha2.ElasticsearchStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ElasticsearchOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ElasticsearchOverview items = 2;
}

// ElasticsearchOverviewSpec defines the desired state of ElasticsearchOverview
message ElasticsearchOverviewSpec {
  optional string version = 1;

  optional string status = 2;

  optional string mode = 3;

  optional DBConnectionInfo connectionInfo = 4;

  optional DBCredentials credentials = 5;

  optional ElasticsearchClusterHealth clusterHealth = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ElasticsearchSchemaOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchSchemaOverviewSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ElasticsearchSchemaOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ElasticsearchSchemaOverview items = 2;
}

// ElasticsearchSchemaOverviewSpec defines the desired state of ElasticsearchSchemaOverview
message ElasticsearchSchemaOverviewSpec {
  repeated ElasticsearchIndexSpec indices = 1;
}

message GenericDatabaseSpec {
  optional string databaseName = 1;

  optional string tableName = 2;

  optional string tableSizeInBytes = 3;
}

message GenericSchemaOverviewSpec {
  repeated GenericDatabaseSpec databases = 1;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MariaDBOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MariaDBOverviewSpec spec = 2;

  optional .kubedb.dev.apimachinery.apis.kubedb.v1alpha2.MariaDBStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MariaDBOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MariaDBOverview items = 2;
}

// MariaDBOverviewSpec defines the desired state of MariaDBOverview
message MariaDBOverviewSpec {
  optional string version = 1;

  optional string status = 2;

  optional string mode = 3;

  optional DBConnectionInfo connectionsInfo = 4;

  optional DBCredentials credentials = 5;

  optional int32 maxConnections = 6;

  optional int32 maxUsedConnections = 7;

  optional int32 questions = 8;

  optional double longQueryTimeThreshold = 9;

  optional int32 numberOfSlowQueries = 10;

  optional int32 abortedClients = 11;

  optional int32 abortedConnections = 12;

  optional int32 threadsCached = 13;

  optional int32 threadsConnected = 14;

  optional int32 threadsCreated = 15;

  optional int32 threadsRunning = 16;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MariaDBQueries {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MariaDBQueriesSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MariaDBQueriesList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MariaDBQueries items = 2;
}

// MariaDBQueriesSpec defines the desired state of MariaDBQueries
message MariaDBQueriesSpec {
  repeated MariaDBQuerySpec queries = 1;
}

message MariaDBQuerySpec {
  optional string startTime = 1;

  optional string userHost = 2;

  optional string queryTimeInMilli = 3;

  optional string lockTimeInMilli = 4;

  optional int64 rows_sent = 5;

  optional int64 rows_examined = 6;

  optional string db = 7;

  optional int64 lastInsertId = 8;

  optional int64 insertId = 9;

  optional int64 serverId = 10;

  optional string sqlText = 11;

  optional int64 threadId = 12;

  optional int64 rowsAffected = 13;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MariaDBSchemaOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional GenericSchemaOverviewSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MariaDBSchemaOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MariaDBSchemaOverview items = 2;
}

message MongoDBCollectionSpec {
  optional string name = 1;

  repeated int32 size = 2;
}

message MongoDBConnectionsInfo {
  optional int32 currentConnections = 1;

  optional int32 totalConnections = 2;

  optional int32 availableConnections = 3;

  optional int32 activeConnections = 4;
}

message MongoDBDatabaseStats {
  optional int32 totalCollections = 1;

  optional int64 dataSize = 2;

  optional int32 totalIndexes = 3;

  optional int64 indexSize = 4;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MongoDBOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MongoDBOverviewSpec spec = 2;

  optional .kubedb.dev.apimachinery.apis.kubedb.v1alpha2.MongoDBStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MongoDBOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MongoDBOverview items = 2;
}

// MongoDBOverviewSpec defines the desired state of MongoDBOverview
message MongoDBOverviewSpec {
  optional string name = 1;

  optional string namespace = 2;

  optional string version = 3;

  optional string type = 4;

  optional string status = 5;

  optional DBConnectionInfo connectionInfo = 6;

  optional DBCredentials credentials = 7;

  optional MongoDBConnectionsInfo connections = 8;

  optional MongoDBDatabaseStats dbStats = 9;

  optional MongoDBShardsInfo shardsInfo = 10;

  optional MongoDBReplicaSetInfo replicaSetInfo = 11;

  map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> resources = 12;

  optional SecurityReport securityReport = 13;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MongoDBQueries {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MongoDBQueriesSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MongoDBQueriesList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MongoDBQueries items = 2;
}

// MongoDBQueriesSpec defines the desired state of MongoDBQueries
message MongoDBQueriesSpec {
  repeated MongoDBQuerySpec queries = 1;
}

message MongoDBQuerySpec {
  optional string operation = 1;

  optional string databaseName = 2;

  optional string collectionName = 3;

  optional string command = 4;

  optional int64 count = 5;

  optional int64 avgExecutionTimeInMS = 6;

  optional int64 minExecutionTimeInMS = 7;

  optional int64 maxExecutionTimeInMS = 8;
}

message MongoDBReplicaSetInfo {
  optional int32 numberOfReplicas = 1;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MongoDBSchemaOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MongoDBSchemaOverviewSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MongoDBSchemaOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MongoDBSchemaOverview items = 2;
}

// MongoDBSchemaOverviewSpec defines the desired state of MongoDBSchemaOverview
message MongoDBSchemaOverviewSpec {
  repeated MongoDBCollectionSpec collections = 1;
}

message MongoDBShardsInfo {
  optional int32 numberOfShards = 1;

  optional int32 replicasPerShards = 2;

  optional int32 numberOfChunks = 3;

  optional bool balancerEnabled = 4;

  optional bool chunksBalanced = 5;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MySQLOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MySQLOverviewSpec spec = 2;

  optional .kubedb.dev.apimachinery.apis.kubedb.v1alpha2.MySQLStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MySQLOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MySQLOverview items = 2;
}

// MySQLOverviewSpec defines the desired state of MySQLOverview
message MySQLOverviewSpec {
  optional string version = 1;

  optional string status = 2;

  optional string mode = 3;

  optional DBConnectionInfo connectionsInfo = 4;

  optional DBCredentials credentials = 5;

  optional int32 maxConnections = 6;

  optional int32 maxUsedConnections = 7;

  optional int32 questions = 8;

  optional double longQueryTimeThreshold = 9;

  optional int32 numberOfSlowQueries = 10;

  optional int32 abortedClients = 11;

  optional int32 abortedConnections = 12;

  optional int32 threadsCached = 13;

  optional int32 threadsConnected = 14;

  optional int32 threadsCreated = 15;

  optional int32 threadsRunning = 16;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MySQLQueries {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MySQLQueriesSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MySQLQueriesList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MySQLQueries items = 2;
}

// MySQLQueriesSpec defines the desired state of MySQLQueries
message MySQLQueriesSpec {
  repeated MySQLQuerySpec queries = 1;
}

message MySQLQuerySpec {
  optional string startTime = 1;

  optional string userHost = 2;

  optional string queryTimeInMilli = 3;

  optional string lockTimeInMilli = 4;

  optional int64 rows_sent = 5;

  optional int64 rows_examined = 6;

  optional string db = 7;

  optional int64 lastInsertId = 8;

  optional int64 insertId = 9;

  optional int64 serverId = 10;

  optional string sqlText = 11;

  optional int64 threadId = 12;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MySQLSchemaOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional GenericSchemaOverviewSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MySQLSchemaOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MySQLSchemaOverview items = 2;
}

message NodesStatsCompletionFields {
  optional string size = 3;

  optional int64 size_in_bytes = 2;
}

message NodesStatsCompletionStats {
  optional string size = 4;

  optional int64 size_in_bytes = 2;

  optional NodesStatsCompletionFields fields = 3;
}

message NodesStatsDocsStats {
  optional int64 count = 1;

  optional int64 deleted = 2;
}

message NodesStatsFieldDataFields {
  optional string memory_size = 1;

  optional int64 memory_size_in_bytes = 2;
}

message NodesStatsFielddataStats {
  optional string memory_size = 1;

  optional int64 memory_size_in_bytes = 2;

  optional int64 evictions = 3;

  optional NodesStatsFieldDataFields fields = 4;
}

message NodesStatsFlushStats {
  optional int64 total = 1;

  optional string total_time = 2;

  optional int64 total_time_in_millis = 3;
}

message NodesStatsGetStats {
  optional int64 total = 1;

  optional string get_time = 2;

  optional int64 time_in_millis = 3;

  optional int64 exists = 4;

  optional string exists_time = 5;

  optional int64 exists_in_millis = 6;

  optional int64 missing = 7;

  optional string missing_time = 8;

  optional int64 missing_in_millis = 9;

  optional int64 current = 10;
}

message NodesStatsIndex {
  optional NodesStatsDocsStats docs = 1;

  optional NodesStatsShardCountStats shards_stats = 2;

  optional NodesStatsStoreStats store = 3;

  optional NodesStatsIndexingStats indexing = 4;

  optional NodesStatsGetStats get = 5;

  optional NodesStatsSearchStats search = 6;

  optional NodesStatsMergeStats merges = 7;

  optional NodesStatsRefreshStats refresh = 8;

  optional NodesStatsFlushStats flush = 9;

  optional NodesStatsWarmerStats warmer = 10;

  optional NodesStatsQueryCacheStats query_cache = 11;

  optional NodesStatsFielddataStats fielddata = 12;

  optional NodesStatsCompletionStats completion = 13;

  optional NodesStatsSegmentsStats segments = 14;

  optional NodesStatsTranslogStats translog = 15;

  optional NodesStatsRequestCacheStats request_cache = 16;

  optional NodesStatsRecoveryStats recovery = 17;

  map<string, NodesStatsIndex> indices = 18;

  // for level=indices
  map<string, NodesStatsIndex> shards = 19;
}

message NodesStatsIndexingStats {
  optional int64 index_total = 1;

  optional string index_time = 2;

  optional int64 index_time_in_millis = 3;

  optional int64 index_current = 4;

  optional int64 index_failed = 5;

  optional int64 delete_total = 6;

  optional string delete_time = 7;

  optional int64 delete_time_in_millis = 8;

  optional int64 delete_current = 9;

  optional int64 noop_update_total = 10;

  optional bool is_throttled = 11;

  optional string throttle_time = 12;

  // no typo, see https://github.com/elastic/elasticsearch/blob/ff99bc1d3f8a7ea72718872d214ec2097dfca276/server/src/main/java/org/elasticsearch/index/shard/IndexingStats.java#L244
  optional int64 throttle_time_in_millis = 13;

  map<string, NodesStatsIndexingStats> types = 14;
}

message NodesStatsMergeStats {
  optional int64 current = 1;

  optional int64 current_docs = 2;

  optional string current_size = 3;

  optional int64 current_size_in_bytes = 4;

  optional int64 total = 5;

  optional string total_time = 6;

  optional int64 total_time_in_millis = 7;

  optional int64 total_docs = 8;

  optional string total_size = 9;

  optional int64 total_size_in_bytes = 10;

  optional string total_stopped_time = 11;

  optional int64 total_stopped_time_in_millis = 12;

  optional string total_throttled_time = 13;

  optional int64 total_throttled_time_in_millis = 14;

  optional string total_auto_throttle = 15;

  optional int64 total_auto_throttle_in_bytes = 16;
}

message NodesStatsNodeOS {
  optional int64 timestamp = 1;

  optional NodesStatsNodeOSCPU cpu = 2;

  optional NodesStatsNodeOSMem mem = 3;

  optional NodesStatsNodeOSSwap swap = 4;
}

message NodesStatsNodeOSCPU {
  optional int64 percent = 1;

  map<string, double> load_average = 2;
}

message NodesStatsNodeOSMem {
  optional string total = 1;

  optional int64 total_in_bytes = 2;

  optional string free = 3;

  optional int64 free_in_bytes = 4;

  optional string used = 5;

  optional int64 used_in_bytes = 6;

  optional int64 free_percent = 7;

  optional int64 used_percent = 8;
}

message NodesStatsNodeOSSwap {
  optional string total = 1;

  optional int64 total_in_bytes = 2;

  optional string free = 3;

  optional int64 free_in_bytes = 4;

  optional string used = 5;

  optional int64 used_in_bytes = 6;
}

message NodesStatsQueryCacheStats {
  optional string memory_size = 1;

  optional int64 memory_size_in_bytes = 2;

  optional int64 total_count = 3;

  optional int64 hit_count = 4;

  optional int64 miss_count = 5;

  optional int64 cache_size = 6;

  optional int64 cache_count = 7;

  optional int64 evictions = 8;
}

message NodesStatsRecoveryStats {
  optional int64 current_as_source = 1;

  optional int64 current_as_target = 2;
}

message NodesStatsRefreshStats {
  optional int64 total = 1;

  optional string total_time = 2;

  optional int64 total_time_in_millis = 3;
}

message NodesStatsRequestCacheStats {
  optional string memory_size = 1;

  optional int64 memory_size_in_bytes = 2;

  optional int64 evictions = 3;

  optional int64 hit_count = 4;

  optional int64 miss_count = 5;
}

message NodesStatsSearchStats {
  optional int64 open_contexts = 1;

  optional int64 query_total = 2;

  optional string query_time = 3;

  optional int64 query_time_in_millis = 4;

  optional int64 query_current = 5;

  optional int64 fetch_total = 6;

  optional string fetch_time = 7;

  optional int64 fetch_time_in_millis = 8;

  optional int64 fetch_current = 9;

  optional int64 scroll_total = 10;

  optional string scroll_time = 11;

  optional int64 scroll_time_in_millis = 12;

  optional int64 scroll_current = 13;

  map<string, NodesStatsSearchStats> groups = 14;
}

message NodesStatsSegmentsStats {
  optional int64 count = 1;

  optional string memory = 2;

  optional int64 memory_in_bytes = 3;

  optional string terms_memory = 4;

  optional int64 terms_memory_in_bytes = 5;

  optional string stored_fields_memory = 6;

  optional int64 stored_fields_memory_in_bytes = 7;

  optional string term_vectors_memory = 8;

  optional int64 term_vectors_memory_in_bytes = 9;

  optional string norms_memory = 10;

  optional int64 norms_memory_in_bytes = 11;

  optional string doc_values_memory = 12;

  optional int64 doc_values_memory_in_bytes = 13;

  optional string index_writer_memory = 14;

  optional int64 index_writer_memory_in_bytes = 15;

  optional string index_writer_max_memory = 16;

  optional int64 index_writer_max_memory_in_bytes = 17;

  optional string version_map_memory = 18;

  optional int64 version_map_memory_in_bytes = 19;

  optional string fixed_bit_set = 20;

  // not a typo
  optional int64 fixed_bit_set_memory_in_bytes = 21;
}

message NodesStatsShardCountStats {
  optional int64 total_count = 1;
}

message NodesStatsStoreStats {
  optional string size = 3;

  optional int64 size_in_bytes = 2;
}

message NodesStatsTranslogStats {
  optional int64 operations = 1;

  optional string size = 4;

  optional int64 size_in_bytes = 3;
}

message NodesStatsWarmerStats {
  optional int64 current = 1;

  optional int64 total = 2;

  optional string total_time = 3;

  optional int64 total_time_in_millis = 4;
}

message PGSetting {
  optional string name = 1;

  optional string currentValue = 2;

  optional string defaultValue = 3;

  optional string unit = 4;

  optional string source = 5;
}

message PostgresBackupInfo {
}

message PostgresConnectionInfo {
  optional int64 maxConnections = 1;

  optional int64 activeConnections = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresOverviewSpec spec = 2;

  optional .kubedb.dev.apimachinery.apis.kubedb.v1alpha2.PostgresStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PostgresOverview items = 2;
}

// PostgresOverviewSpec defines the desired state of PostgresOverview
message PostgresOverviewSpec {
  optional string version = 1;

  optional string connectionURL = 2;

  optional string status = 3;

  optional string mode = 4;

  repeated PostgresReplicationStatus replicationStatus = 5;

  optional PostgresConnectionInfo connectionInfo = 6;

  optional PostgresBackupInfo backupInfo = 7;

  optional PostgresVacuumInfo vacuumInfo = 8;
}

// PostgresOverviewStatus defines the observed state of PostgresOverview
message PostgresOverviewStatus {
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresQueries {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresQueriesSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresQueriesList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PostgresQueries items = 2;
}

// PostgresQueriesSpec defines the desired state of PostgresQueries
message PostgresQueriesSpec {
  repeated PostgresQuerySpec queries = 1;
}

message PostgresQuerySpec {
  optional int64 userOID = 1;

  optional int64 databaseOID = 2;

  optional string query = 3;

  optional int64 calls = 4;

  optional int64 rows = 5;

  optional double totalTime = 6;

  optional double minTime = 7;

  optional double maxTime = 8;

  optional int64 sharedBlksHit = 9;

  optional int64 sharedBlksRead = 10;

  optional int64 sharedBlksDirtied = 11;

  optional int64 sharedBlksWritten = 12;

  optional int64 localBlksHit = 13;

  optional int64 localBlksRead = 14;

  optional int64 localBlksDirtied = 15;

  optional int64 localBlksWritten = 16;

  optional int64 tempBlksRead = 17;

  optional int64 tempBlksWritten = 18;

  optional double blkReadTime = 19;

  optional double blkWriteTime = 20;

  optional string bufferHitPercentage = 21;

  optional string localBufferHitPercentage = 22;
}

message PostgresReplicationStatus {
  optional string applicationName = 1;

  optional string state = 2;

  optional int64 writeLag = 3;

  optional int64 flushLag = 4;

  optional int64 replayLag = 5;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresSchemaOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional GenericSchemaOverviewSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresSchemaOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PostgresSchemaOverview items = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresSettings {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresSettingsSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PostgresSettingsList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PostgresSettings items = 2;
}

// PostgresSettingsSpec defines the desired state of PostgresSettings
message PostgresSettingsSpec {
  repeated PGSetting settings = 1;
}

message PostgresVacuumInfo {
  optional string autoVacuum = 1;

  optional int64 activeVacuumProcess = 2;
}

message RedisDatabaseSpec {
  optional string dbId = 1;

  optional string keys = 2;

  optional string expires = 3;

  optional string avgTTL = 4;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message RedisOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisOverviewSpec spec = 2;

  optional .kubedb.dev.apimachinery.apis.kubedb.v1alpha2.RedisStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message RedisOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated RedisOverview items = 2;
}

// RedisOverviewSpec defines the desired state of RedisOverview
message RedisOverviewSpec {
  optional string version = 1;

  optional string status = 2;

  optional string mode = 3;

  optional string evictionPolicy = 4;

  optional int64 maxClients = 5;

  optional int64 connectedClients = 6;

  optional int64 blockedClients = 7;

  optional int64 totalKeys = 8;

  optional int64 expiredKeys = 9;

  optional int64 evictedKeys = 10;

  optional int64 receivedConnections = 11;

  optional int64 rejectedConnections = 12;

  optional int64 slowLogThresholdMicroSec = 13;

  optional int64 slowLogMaxLen = 14;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message RedisQueries {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisQueriesSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message RedisQueriesList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated RedisQueries items = 2;
}

// RedisQueriesSpec defines the desired state of RedisQueries
message RedisQueriesSpec {
  repeated RedisQuerySpec queries = 1;
}

message RedisQuerySpec {
  optional int64 queryId = 1;

  optional int64 queryTimestamp = 2;

  optional int64 execTimeInMircoSeconds = 3;

  repeated string args = 4;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message RedisSchemaOverview {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisSchemaOverviewSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message RedisSchemaOverviewList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated RedisSchemaOverview items = 2;
}

// RedisSchemaOverviewSpec defines the desired state of RedisSchemaOverview
message RedisSchemaOverviewSpec {
  repeated RedisDatabaseSpec databases = 1;
}

message SecurityReport {
  optional bool tlsSecured = 1;

  optional bool backupEnabled = 2;

  optional bool monitoringEnabled = 3;
}

